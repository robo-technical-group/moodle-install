function create_db() {
    if [ -z "$db_pass" ]
    then
        db_pass=$(cat /dev/urandom | tr -dc '[A-Za-z0-9!#%&()+,.:;<=>@|]' | fold -w ${1:-20} | head -n 1)
        db_create_user=1
    fi

    case "$db_type" in
    mariadb)
        if [ "$db_host" == "localhost" ]
        then
            install_mariadb
        fi
        create_db_mysql
        ;;

    mysql)
        if [ "$db_host" == "localhost" ]
        then
            install_mysql
        fi
        create_db_mysql
        ;;

    postgres|psql)
        if [ "$db_host" == "localhost" ]
        then
            install_postgres
        fi
        create_db_postgres
        ;;
    esac
}

function create_db_mariadb() {
    create_db_mysql
}

function create_db_mysql() {
    local sql="/tmp/user.sql"
    # Test for existing user
    if [ $db_create_user -eq 0 ]
    then
        sed -e "s/%%DBUSER%%/${db_user}/g" ${libdir}/mysql-user-count.sql > "$sql"
        local users_found=$(sudo mysql --skip-column-names < $sql)
        if [ $users_found -eq 0 ]
        then
            db_create_user=1
        fi
    fi

    # Test for existing database
    local create_db=0
    sed -e "s/%%DBNAME%%/${db_name}/g" ${libdir}/mysql-db-count.sql > "$sql"
    local db_found=$(sudo mysql --skip-column-names < $sql)
    if [ $db_found -eq 0 ]
    then
        create_db=1
    fi

    if [ $db_create_user -eq 1 ]
    then
        echo "Creating Moodle database user."
        sed -e "s/%%DBUSER%%/${db_user}/g" -e "s/%%DBPASS%%/${db_pass}/g" ${libdir}/mysql-create-user.sql > "$sql"
        sudo mysql < $sql
    fi

    if [ $create_db -eq 1 ]
    then
        echo "Creating empty Moodle database."
        sed -e "s/%%DBUSER%%/${db_user}/g" -e "s/%%DBNAME%%/${db_name}/g" ${libdir}/mysql-create-db.sql > "$sql"
        sudo mysql < $sql
    fi

    rm "$sql"
}

function create_db_postgres() {
    local sql="/tmp/user.sql"
    # Test for existing user
    if [ $db_create_user -eq 0 ]
    then
        sed -e "s/%%DBUSER%%/${db_user}/g" ${libdir}/psql-user-count.sql > "$sql"
        local users_found=$(sudo sudo -u postgres psql --tuples-only --no-align < $sql)
        if [ $users_found -eq 0 ]
        then
            db_create_user=1
        fi
    fi

    # Test for existing database
    local create_db=0
    sed -e "s/%%DBNAME%%/${db_name}/g" ${libdir}/psql-db-count.sql > "$sql"
    local db_found=$(sudo sudo -u postgres psql --tuples-only --no-align < $sql)
    if [ $db_found -eq 0 ]
    then
        create_db=1
    fi

    if [ $db_create_user -eq 1 ]
    then
        echo "Creating Moodle database user."
        sed -e "s/%%DBUSER%%/${db_user}/g" -e "s/%%DBPASS%%/${db_pass}/g" ${libdir}/psql-create-user.sql > "$sql"
        sudo sudo -u postgres psql < $sql
    fi

    if [ $create_db -eq 1 ]
    then
        echo "Creating empty Moodle database."
        sed -e "s/%%DBUSER%%/${db_user}/g" -e "s/%%DBNAME%%/${db_name}/g" ${libdir}/psql-create-db.sql > "$sql"
        sudo sudo -u postgres psql < $sql
    fi

    rm "$sql"
}

function install_mariadb() {
    local mariadb_srv="/usr/sbin/mariadbd"
    if [ ! -z "$mariadb_srv" -a -x "$mariadb_srv" ]
    then
        print_verbose "MariaDB server is installed."
    else
        echo "Installing MariaDB server."
        sudo apt-get install -y mariadb-client mariadb-server
    fi
}

function install_mysql() {
    local mysql_srv="/usr/sbin/mysqld"
    if [ ! -z "$mysql_srv" -a -x "$mysql_srv" ]
    then
        print_verbose "MySQL server is installed."
    else
        echo "Installing MySQL server."
        cd /tmp
        wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
        sudo dpkg -i mysql-apt-config*
        rm mysql-apt-config*
        sudo apt-get update
        sudo apt-get install -y mysql-client mysql-server
    fi
}

function install_postgres() {
    local pgbinroot="/usr/lib/postgresql"
    local vers
    local v
    for v in $(ls "$pgbinroot" 2>/dev/null) ;
    do
        if [ -x "${pgbinroot}/${v}/bin/pg_ctl" ]
        then
            vers="$vers $v"
        fi
    done

    # Just test the last version found
    local postgres_srv="${pgbinroot}/${v}/bin/postgres"
    if [ ! -z "$postgres_srv" -a -x "$postgres_srv" ]
    then
        print_verbose "PostgreSQL server is installed."
    else
        echo "Installing PostgreSQL server."
        sudo apt-get install -y postgresql postgresql-client
    fi
}
